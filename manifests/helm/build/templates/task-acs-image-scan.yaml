apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: acs-image-scan
  annotations:
    task.results.format: application/json
    task.results.type: roxctl-image-scan
    task.results.key: SCAN_OUTPUT
    task.output.location: logs
    task.results.container: step-report
spec:
  description: Policy check an image with StackRox/RHACS This tasks allows you to
    check an image against build-time policies and apply enforcement to fail builds.
    It's a companion to the stackrox-image-scan task, which returns full vulnerability
    scan results for an image.
  params:
  - description: |
      Secret containing the address:port tuple for StackRox Central)
      (example - rox.stackrox.io:443)
    name: rox_central_endpoint
    type: string
  - description: Secret containing the StackRox API token with CI permissions
    name: rox_api_token
    type: string
  - description: |
      Full name of image to scan (example -- gcr.io/rox/sample:5.0-rc1)
    name: image
    type: string
  - default: "false"
    description: |
      When set to `"true"`, skip verifying the TLS certs of the Central
      endpoint.  Defaults to `"false"`.
    name: insecure-skip-tls-verify
    type: string
  - description: |
      Digest of the image
    name: image_digest
    type: string
  results:
  - description: Output of `roxctl image check`
    name: SCAN_OUTPUT
  steps:
  - env:
    - name: ROX_API_TOKEN
      valueFrom:
        secretKeyRef:
          key: rox_api_token
          name: $(params.rox_api_token)
    image: registry.access.redhat.com/ubi8/ubi-minimal
    name: rox-image-scan
    script: |
      #!/usr/bin/env bash
      set +x
      IMAGE=$(params.image)@$(params.image_digest)
      curl -s -k -L -H "Authorization: Bearer $ROX_API_TOKEN" \
        "https://$(params.rox_central_endpoint)/api/cli/download/roxctl-linux" \
        --output ./roxctl  \
        > /dev/null
      chmod +x ./roxctl  > /dev/null
      ./roxctl image scan \
        $( [ "$(params.insecure-skip-tls-verify)" = "true" ] && \
        echo -n "--insecure-skip-tls-verify") \
        -e "$(params.rox_central_endpoint)" --image "$IMAGE" --output json > roxctl_output.json
      cat roxctl_output.json >  $(workspaces.reports.path)/image-scan
  - image: 'quay.io/lrangine/crda-maven:11.0'
    name: export-vulnerabilities
    script: |
        #!/bin/sh
        jq -rce \
        "{vulnerabilities:{
        critical: (.result.summary.CRITICAL),
        high: (.result.summary.IMPORTANT),
        medium: (.result.summary.MODERATE),
        low: (.result.summary.LOW)
        }}" $(workspaces.reports.path)/image-scan | tee $(results.SCAN_OUTPUT.path)
  - image: 'quay.io/lrangine/crda-maven:11.0'
    name: report
    script: |
        #!/bin/sh
        cat $(workspaces.reports.path)/image-scan
  workspaces:
    - name: reports
